apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME
  namespace: $NAMESPACE-$BRANCH_NAME
spec:
  selector:
    matchLabels:
      app: $SERVICE_NAME
      env: $BRANCH_NAME
  strategy:
    rollingUpdate:
      maxSurge: "200%"
      maxUnavailable: "50%"
  replicas: 1
  template:
    metadata:
      labels:
        app: $SERVICE_NAME
        env: $BRANCH_NAME
    spec:
      containers:
      - name: backend
        image: $IMAGE
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 25
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 1
        env:
          - name: "NODE_ENV"
            value: "$BRANCH_NAME"
---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  namespace: $NAMESPACE-$BRANCH_NAME
  labels:
    app: $SERVICE_NAME
    env: $BRANCH_NAME
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
    name: http
  type: NodePort
  selector:
    app: $SERVICE_NAME
    env: $BRANCH_NAME
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: $SERVICE_NAME-cert
  namespace: $NAMESPACE-$BRANCH_NAME
spec:
  secretName: $BRANCH_NAME-fleetmax-lmdmax-com-cert
  issuerRef:
    name: letsencrypt-provider-production
    kind: ClusterIssuer
  commonName: "$BRANCH_NAME.fleetmax.lmdmax.com"
  dnsNames:
  - "$BRANCH_NAME.fleetmax.lmdmax.com"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME
  namespace: $NAMESPACE-$BRANCH_NAME
  labels:
    app: $SERVICE_NAME
    env: $BRANCH_NAME
  annotations:
    kubernetes.io/ingress.class: "nginx"
    external-dns.alpha.kubernetes.io/hostname: "$BRANCH_NAME.fleetmax.lmdmax.com"
    nginx.ingress.kubernetes.io/limit-connections: '50'
    nginx.ingress.kubernetes.io/limit-rpm: '100'
    nginx.ingress.kubernetes.io/limit-rps: '30'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts:
        - $BRANCH_NAME.fleetmax.lmdmax.com
      secretName: $BRANCH_NAME-fleetmax-lmdmax-com-cert
  rules:
  - host: $BRANCH_NAME.fleetmax.lmdmax.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: $SERVICE_NAME-cert-static
  namespace: fleet-production
spec:
  secretName: fleetmax-lmdmax-com-cert
  issuerRef:
    name: letsencrypt-provider-production
    kind: ClusterIssuer
  commonName: "fleetmax.lmdmax.com"
  dnsNames:
  - "fleetmax.lmdmax.com"
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: fleetmax-production-static
#   namespace: fleet-production
#   labels:
#     app: $SERVICE_NAME
#     env: production
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     external-dns.alpha.kubernetes.io/hostname: "fleetmax.lmdmax.com"
#     nginx.ingress.kubernetes.io/limit-connections: '50'
#     nginx.ingress.kubernetes.io/limit-rpm: '100'
#     nginx.ingress.kubernetes.io/limit-rps: '30'
#     nginx.ingress.kubernetes.io/ssl-redirect: 'true'
# spec:
#   tls:
#     - hosts:
#         - fleetmax.lmdmax.com
#       secretName: fleetmax-lmdmax-com-cert
#   rules:
#   - host: fleetmax.lmdmax.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: $SERVICE_NAME
#             port:
#               number: 80